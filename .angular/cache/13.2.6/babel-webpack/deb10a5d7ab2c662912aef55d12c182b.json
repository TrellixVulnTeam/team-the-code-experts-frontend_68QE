{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Directive, Input, Component, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as Mousetrap from 'mousetrap';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction HotkeysCheatsheetComponent_tr_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(key_r3);\n  }\n}\n\nfunction HotkeysCheatsheetComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 5);\n    i0.ɵɵtemplate(2, HotkeysCheatsheetComponent_tr_6_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const hotkey_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", hotkey_r1.formatted);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hotkey_r1.description);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"in\": a0\n  };\n};\n\nclass Hotkey {\n  /**\n   * Creates a new Hotkey for Mousetrap binding\n   *\n   * @param combo       mousetrap key binding\n   * @param description description for the help menu\n   * @param callback    method to call when key is pressed\n   * @param action      the type of event to listen for (for mousetrap)\n   * @param allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n   * @param persistent  if true, the binding is preserved upon route changes\n   */\n  constructor(combo, callback, allowIn, description, action, persistent) {\n    this.combo = combo;\n    this.callback = callback;\n    this.allowIn = allowIn;\n    this.description = description;\n    this.action = action;\n    this.persistent = persistent;\n    this.combo = Array.isArray(combo) ? combo : [combo];\n    this.allowIn = allowIn || [];\n    this.description = description || '';\n  }\n\n  static symbolize(combo) {\n    const map = {\n      command: '\\u2318',\n      shift: '\\u21E7',\n      left: '\\u2190',\n      right: '\\u2192',\n      up: '\\u2191',\n      down: '\\u2193',\n      // tslint:disable-next-line:object-literal-key-quotes\n      'return': '\\u23CE',\n      backspace: '\\u232B' // ⌫\n\n    };\n    const comboSplit = combo.split('+');\n\n    for (let i = 0; i < comboSplit.length; i++) {\n      // try to resolve command / ctrl based on OS:\n      if (comboSplit[i] === 'mod') {\n        if (window.navigator && window.navigator.platform.indexOf('Mac') >= 0) {\n          comboSplit[i] = 'command';\n        } else {\n          comboSplit[i] = 'ctrl';\n        }\n      }\n\n      comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n    }\n\n    return comboSplit.join(' + ');\n  }\n\n  get formatted() {\n    if (!this.formattedHotkey) {\n      const sequence = this.combo;\n\n      for (let i = 0; i < sequence.length; i++) {\n        sequence[i] = Hotkey.symbolize(sequence[i]);\n      }\n\n      this.formattedHotkey = sequence;\n    }\n\n    return this.formattedHotkey;\n  }\n\n}\n\nconst HotkeyOptions = new InjectionToken('HotkeyOptions');\n\nclass HotkeysService {\n  constructor(options) {\n    this.options = options;\n    this.hotkeys = [];\n    this.pausedHotkeys = [];\n    this.cheatSheetToggle = new Subject();\n    this.preventIn = ['INPUT', 'SELECT', 'TEXTAREA']; // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n\n    Mousetrap.prototype.stopCallback = (event, element, combo, callback) => {\n      // if the element has the class \"mousetrap\" then no need to stop\n      if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n        return false;\n      }\n\n      return element.contentEditable && element.contentEditable === 'true';\n    };\n\n    this.mousetrap = new Mousetrap.default();\n    this.initCheatSheet();\n  }\n\n  initCheatSheet() {\n    if (!this.options.disableCheatSheet) {\n      this.add(new Hotkey(this.options.cheatSheetHotkey || '?', function (_) {\n        this.cheatSheetToggle.next();\n      }.bind(this), [], this.options.cheatSheetDescription || 'Show / hide this help menu'));\n    }\n\n    if (this.options.cheatSheetCloseEsc) {\n      this.add(new Hotkey('esc', function (_) {\n        this.cheatSheetToggle.next(false);\n      }.bind(this), ['HOTKEYS-CHEATSHEET'], this.options.cheatSheetCloseEscDescription || 'Hide this help menu'));\n    }\n  }\n\n  add(hotkey, specificEvent) {\n    if (Array.isArray(hotkey)) {\n      const temp = [];\n\n      for (const key of hotkey) {\n        temp.push(this.add(key, specificEvent));\n      }\n\n      return temp;\n    }\n\n    this.remove(hotkey);\n    this.hotkeys.push(hotkey);\n    this.mousetrap.bind(hotkey.combo, (event, combo) => {\n      let shouldExecute = true; // if the callback is executed directly `hotkey.get('w').callback()`\n      // there will be no event, so just execute the callback.\n\n      if (event) {\n        const target = event.target || event.srcElement; // srcElement is IE only\n\n        const nodeName = target.nodeName.toUpperCase(); // check if the input has a mousetrap class, and skip checking preventIn if so\n\n        if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n          shouldExecute = true;\n        } else if (this.preventIn.indexOf(nodeName) > -1 && hotkey.allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1) {\n          // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n          shouldExecute = false;\n        }\n      }\n\n      if (shouldExecute) {\n        return hotkey.callback.apply(this, [event, combo]);\n      }\n    }, specificEvent);\n    return hotkey;\n  }\n\n  remove(hotkey, specificEvent) {\n    const temp = [];\n\n    if (!hotkey) {\n      for (const key of this.hotkeys) {\n        temp.push(this.remove(key, specificEvent));\n      }\n\n      return temp;\n    }\n\n    if (Array.isArray(hotkey)) {\n      for (const key of hotkey) {\n        temp.push(this.remove(key));\n      }\n\n      return temp;\n    }\n\n    const index = this.findHotkey(hotkey);\n\n    if (index > -1) {\n      this.hotkeys.splice(index, 1);\n      this.mousetrap.unbind(hotkey.combo, specificEvent);\n      return hotkey;\n    }\n\n    return null;\n  }\n\n  get(combo) {\n    if (!combo) {\n      return this.hotkeys;\n    }\n\n    if (Array.isArray(combo)) {\n      const temp = [];\n\n      for (const key of combo) {\n        temp.push(this.get(key));\n      }\n\n      return temp;\n    }\n\n    for (const hotkey of this.hotkeys) {\n      if (hotkey.combo.indexOf(combo) > -1) {\n        return hotkey;\n      }\n    }\n\n    return null;\n  } // noinspection JSUnusedGlobalSymbols\n\n\n  pause(hotkey) {\n    if (!hotkey) {\n      return this.pause(this.hotkeys);\n    }\n\n    if (Array.isArray(hotkey)) {\n      const temp = [];\n\n      for (const key of hotkey) {\n        temp.push(this.pause(key));\n      }\n\n      return temp;\n    }\n\n    this.remove(hotkey);\n    this.pausedHotkeys.push(hotkey);\n    return hotkey;\n  } // noinspection JSUnusedGlobalSymbols\n\n\n  unpause(hotkey) {\n    if (!hotkey) {\n      return this.unpause(this.pausedHotkeys);\n    }\n\n    if (Array.isArray(hotkey)) {\n      const temp = [];\n\n      for (const key of hotkey) {\n        temp.push(this.unpause(key));\n      }\n\n      return temp;\n    }\n\n    const index = this.pausedHotkeys.indexOf(hotkey);\n\n    if (index > -1) {\n      this.add(hotkey);\n      return this.pausedHotkeys.splice(index, 1);\n    }\n\n    return null;\n  } // noinspection JSUnusedGlobalSymbols\n\n\n  reset() {\n    this.mousetrap.reset();\n    this.hotkeys = [];\n    this.pausedHotkeys = [];\n    this.initCheatSheet();\n  }\n\n  findHotkey(hotkey) {\n    return this.hotkeys.indexOf(hotkey);\n  }\n\n}\n\nHotkeysService.ɵfac = function HotkeysService_Factory(t) {\n  return new (t || HotkeysService)(i0.ɵɵinject(HotkeyOptions));\n};\n\nHotkeysService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HotkeysService,\n  factory: HotkeysService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotkeysService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [HotkeyOptions]\n      }]\n    }];\n  }, null);\n})();\n\nclass HotkeysDirective {\n  constructor(hotkeysService, elementRef) {\n    this.hotkeysService = hotkeysService;\n    this.elementRef = elementRef;\n    this.hotkeysList = [];\n    this.oldHotkeys = []; // Bind hotkeys to the current element (and any children)\n\n    this.mousetrap = new Mousetrap.default(this.elementRef.nativeElement);\n  }\n\n  ngOnInit() {\n    for (const hotkey of this.hotkeys) {\n      const combo = Object.keys(hotkey)[0];\n      const hotkeyObj = new Hotkey(combo, hotkey[combo]);\n      const oldHotkey = this.hotkeysService.get(combo);\n\n      if (oldHotkey !== null) {\n        // We let the user overwrite callbacks temporarily if you specify it in HTML\n        this.oldHotkeys.push(oldHotkey);\n        this.hotkeysService.remove(oldHotkey);\n      }\n\n      this.hotkeysList.push(hotkeyObj);\n      this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n    }\n  }\n\n  ngOnDestroy() {\n    for (const hotkey of this.hotkeysList) {\n      this.mousetrap.unbind(hotkey.combo);\n    }\n\n    this.hotkeysService.add(this.oldHotkeys);\n  }\n\n}\n\nHotkeysDirective.ɵfac = function HotkeysDirective_Factory(t) {\n  return new (t || HotkeysDirective)(i0.ɵɵdirectiveInject(HotkeysService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nHotkeysDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: HotkeysDirective,\n  selectors: [[\"\", \"hotkeys\", \"\"]],\n  inputs: {\n    hotkeys: \"hotkeys\"\n  },\n  features: [i0.ɵɵProvidersFeature([HotkeysService])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotkeysDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[hotkeys]',\n      providers: [HotkeysService]\n    }]\n  }], function () {\n    return [{\n      type: HotkeysService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    hotkeys: [{\n      type: Input\n    }]\n  });\n})();\n\nclass HotkeysCheatsheetComponent {\n  constructor(hotkeysService) {\n    this.hotkeysService = hotkeysService;\n    this.helpVisible = false;\n    this.title = 'Keyboard Shortcuts:';\n  }\n\n  ngOnInit() {\n    this.subscription = this.hotkeysService.cheatSheetToggle.subscribe(isOpen => {\n      if (isOpen !== false) {\n        this.hotkeys = this.hotkeysService.hotkeys.filter(hotkey => hotkey.description);\n      }\n\n      if (isOpen === false) {\n        this.helpVisible = false;\n      } else {\n        this.toggleCheatSheet();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  toggleCheatSheet() {\n    this.helpVisible = !this.helpVisible;\n  }\n\n}\n\nHotkeysCheatsheetComponent.ɵfac = function HotkeysCheatsheetComponent_Factory(t) {\n  return new (t || HotkeysCheatsheetComponent)(i0.ɵɵdirectiveInject(HotkeysService));\n};\n\nHotkeysCheatsheetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HotkeysCheatsheetComponent,\n  selectors: [[\"hotkeys-cheatsheet\"]],\n  inputs: {\n    title: \"title\"\n  },\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"cfp-hotkeys-container\", \"fade\", 2, \"display\", \"none\", 3, \"ngClass\"], [1, \"cfp-hotkeys\"], [1, \"cfp-hotkeys-title\"], [4, \"ngFor\", \"ngForOf\"], [1, \"cfp-hotkeys-close\", 3, \"click\"], [1, \"cfp-hotkeys-keys\"], [\"class\", \"cfp-hotkeys-key\", 4, \"ngFor\", \"ngForOf\"], [1, \"cfp-hotkeys-text\"], [1, \"cfp-hotkeys-key\"]],\n  template: function HotkeysCheatsheetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\")(5, \"tbody\");\n      i0.ɵɵtemplate(6, HotkeysCheatsheetComponent_tr_6_Template, 5, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵlistener(\"click\", function HotkeysCheatsheetComponent_Template_div_click_7_listener() {\n        return ctx.toggleCheatSheet();\n      });\n      i0.ɵɵtext(8, \"\\xD7\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.helpVisible));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.hotkeys);\n    }\n  },\n  directives: [i2.NgClass, i2.NgForOf],\n  styles: [\".cfp-hotkeys-container[_ngcontent-%COMP%]{display:table!important;position:fixed;width:100%;height:100%;top:0;left:0;color:#333;font-size:1em;background-color:#ffffffe6}.cfp-hotkeys-container.fade[_ngcontent-%COMP%]{z-index:-1024;visibility:hidden;opacity:0;transition:opacity .15s linear}.cfp-hotkeys-container.fade.in[_ngcontent-%COMP%]{z-index:10002;visibility:visible;opacity:1}.cfp-hotkeys-title[_ngcontent-%COMP%]{font-weight:700;text-align:center;font-size:1.2em}.cfp-hotkeys[_ngcontent-%COMP%]{width:100%;height:100%;display:table-cell;vertical-align:middle}.cfp-hotkeys[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin:auto;color:#333}.cfp-content[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle}.cfp-hotkeys-keys[_ngcontent-%COMP%]{padding:5px;text-align:right}.cfp-hotkeys-key[_ngcontent-%COMP%]{display:inline-block;color:#fff;background-color:#333;border:1px solid #333;border-radius:5px;text-align:center;margin-right:5px;box-shadow:inset 0 1px #666,0 1px #bbb;padding:5px 9px;font-size:1em}.cfp-hotkeys-text[_ngcontent-%COMP%]{padding-left:10px;font-size:1em}.cfp-hotkeys-close[_ngcontent-%COMP%]{position:fixed;top:20px;right:20px;font-size:2em;font-weight:700;padding:5px 10px;border:1px solid #ddd;border-radius:5px;min-height:45px;min-width:45px;text-align:center}.cfp-hotkeys-close[_ngcontent-%COMP%]:hover{background-color:#fff;cursor:pointer}@media all and (max-width: 500px){.cfp-hotkeys[_ngcontent-%COMP%]{font-size:.8em}}@media all and (min-width: 750px){.cfp-hotkeys[_ngcontent-%COMP%]{font-size:1.2em}}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotkeysCheatsheetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hotkeys-cheatsheet',\n      template: \"<div class=\\\"cfp-hotkeys-container fade\\\" [ngClass]=\\\"{'in': helpVisible}\\\" style=\\\"display:none\\\">\\n    <div class=\\\"cfp-hotkeys\\\">\\n        <h4 class=\\\"cfp-hotkeys-title\\\">{{ title }}</h4>\\n        <table>\\n            <tbody>\\n            <tr *ngFor=\\\"let hotkey of hotkeys\\\">\\n                <td class=\\\"cfp-hotkeys-keys\\\">\\n                    <span *ngFor=\\\"let key of hotkey.formatted\\\" class=\\\"cfp-hotkeys-key\\\">{{ key }}</span>\\n                </td>\\n                <td class=\\\"cfp-hotkeys-text\\\">{{ hotkey.description }}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"cfp-hotkeys-close\\\" (click)=\\\"toggleCheatSheet()\\\">&#215;</div>\\n    </div>\\n</div>\\n\",\n      styles: [\".cfp-hotkeys-container{display:table!important;position:fixed;width:100%;height:100%;top:0;left:0;color:#333;font-size:1em;background-color:#ffffffe6}.cfp-hotkeys-container.fade{z-index:-1024;visibility:hidden;opacity:0;transition:opacity .15s linear}.cfp-hotkeys-container.fade.in{z-index:10002;visibility:visible;opacity:1}.cfp-hotkeys-title{font-weight:700;text-align:center;font-size:1.2em}.cfp-hotkeys{width:100%;height:100%;display:table-cell;vertical-align:middle}.cfp-hotkeys table{margin:auto;color:#333}.cfp-content{display:table-cell;vertical-align:middle}.cfp-hotkeys-keys{padding:5px;text-align:right}.cfp-hotkeys-key{display:inline-block;color:#fff;background-color:#333;border:1px solid #333;border-radius:5px;text-align:center;margin-right:5px;box-shadow:inset 0 1px #666,0 1px #bbb;padding:5px 9px;font-size:1em}.cfp-hotkeys-text{padding-left:10px;font-size:1em}.cfp-hotkeys-close{position:fixed;top:20px;right:20px;font-size:2em;font-weight:700;padding:5px 10px;border:1px solid #ddd;border-radius:5px;min-height:45px;min-width:45px;text-align:center}.cfp-hotkeys-close:hover{background-color:#fff;cursor:pointer}@media all and (max-width: 500px){.cfp-hotkeys{font-size:.8em}}@media all and (min-width: 750px){.cfp-hotkeys{font-size:1.2em}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: HotkeysService\n    }];\n  }, {\n    title: [{\n      type: Input\n    }]\n  });\n})();\n\nclass HotkeyModule {\n  // noinspection JSUnusedGlobalSymbols\n  static forRoot(options = {}) {\n    return {\n      ngModule: HotkeyModule,\n      providers: [HotkeysService, {\n        provide: HotkeyOptions,\n        useValue: options\n      }]\n    };\n  }\n\n}\n\nHotkeyModule.ɵfac = function HotkeyModule_Factory(t) {\n  return new (t || HotkeyModule)();\n};\n\nHotkeyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HotkeyModule\n});\nHotkeyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotkeyModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [HotkeysDirective, HotkeysCheatsheetComponent],\n      imports: [CommonModule],\n      exports: [HotkeysDirective, HotkeysCheatsheetComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of angular2-hotkeys\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Hotkey, HotkeyModule, HotkeyOptions, HotkeysCheatsheetComponent, HotkeysDirective, HotkeysService };","map":{"version":3,"sources":["/Users/baeonette/Software Development/Final-Project/broadcast/broadcast-frontend/node_modules/angular2-hotkeys/fesm2015/angular2-hotkeys.mjs"],"names":["i0","InjectionToken","Injectable","Inject","Directive","Input","Component","NgModule","Subject","Mousetrap","i2","CommonModule","Hotkey","constructor","combo","callback","allowIn","description","action","persistent","Array","isArray","symbolize","map","command","shift","left","right","up","down","backspace","comboSplit","split","i","length","window","navigator","platform","indexOf","join","formatted","formattedHotkey","sequence","HotkeyOptions","HotkeysService","options","hotkeys","pausedHotkeys","cheatSheetToggle","preventIn","prototype","stopCallback","event","element","className","contentEditable","mousetrap","default","initCheatSheet","disableCheatSheet","add","cheatSheetHotkey","_","next","bind","cheatSheetDescription","cheatSheetCloseEsc","cheatSheetCloseEscDescription","hotkey","specificEvent","temp","key","push","remove","shouldExecute","target","srcElement","nodeName","toUpperCase","allow","apply","index","findHotkey","splice","unbind","get","pause","unpause","reset","ɵfac","ɵprov","type","args","providedIn","undefined","decorators","HotkeysDirective","hotkeysService","elementRef","hotkeysList","oldHotkeys","nativeElement","ngOnInit","Object","keys","hotkeyObj","oldHotkey","ngOnDestroy","ElementRef","ɵdir","selector","providers","HotkeysCheatsheetComponent","helpVisible","title","subscription","subscribe","isOpen","filter","toggleCheatSheet","unsubscribe","ɵcmp","NgClass","NgForOf","template","styles","HotkeyModule","forRoot","ngModule","provide","useValue","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Directive, Input, Component, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as Mousetrap from 'mousetrap';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass Hotkey {\n    /**\n     * Creates a new Hotkey for Mousetrap binding\n     *\n     * @param combo       mousetrap key binding\n     * @param description description for the help menu\n     * @param callback    method to call when key is pressed\n     * @param action      the type of event to listen for (for mousetrap)\n     * @param allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n     * @param persistent  if true, the binding is preserved upon route changes\n     */\n    constructor(combo, callback, allowIn, description, action, persistent) {\n        this.combo = combo;\n        this.callback = callback;\n        this.allowIn = allowIn;\n        this.description = description;\n        this.action = action;\n        this.persistent = persistent;\n        this.combo = (Array.isArray(combo) ? combo : [combo]);\n        this.allowIn = allowIn || [];\n        this.description = description || '';\n    }\n    static symbolize(combo) {\n        const map = {\n            command: '\\u2318',\n            shift: '\\u21E7',\n            left: '\\u2190',\n            right: '\\u2192',\n            up: '\\u2191',\n            down: '\\u2193',\n            // tslint:disable-next-line:object-literal-key-quotes\n            'return': '\\u23CE',\n            backspace: '\\u232B' // ⌫\n        };\n        const comboSplit = combo.split('+');\n        for (let i = 0; i < comboSplit.length; i++) {\n            // try to resolve command / ctrl based on OS:\n            if (comboSplit[i] === 'mod') {\n                if (window.navigator && window.navigator.platform.indexOf('Mac') >= 0) {\n                    comboSplit[i] = 'command';\n                }\n                else {\n                    comboSplit[i] = 'ctrl';\n                }\n            }\n            comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n        }\n        return comboSplit.join(' + ');\n    }\n    get formatted() {\n        if (!this.formattedHotkey) {\n            const sequence = this.combo;\n            for (let i = 0; i < sequence.length; i++) {\n                sequence[i] = Hotkey.symbolize(sequence[i]);\n            }\n            this.formattedHotkey = sequence;\n        }\n        return this.formattedHotkey;\n    }\n}\n\nconst HotkeyOptions = new InjectionToken('HotkeyOptions');\n\nclass HotkeysService {\n    constructor(options) {\n        this.options = options;\n        this.hotkeys = [];\n        this.pausedHotkeys = [];\n        this.cheatSheetToggle = new Subject();\n        this.preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\n        // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n        Mousetrap.prototype.stopCallback = (event, element, combo, callback) => {\n            // if the element has the class \"mousetrap\" then no need to stop\n            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n                return false;\n            }\n            return (element.contentEditable && element.contentEditable === 'true');\n        };\n        this.mousetrap = new Mousetrap.default();\n        this.initCheatSheet();\n    }\n    initCheatSheet() {\n        if (!this.options.disableCheatSheet) {\n            this.add(new Hotkey(this.options.cheatSheetHotkey || '?', function (_) {\n                this.cheatSheetToggle.next();\n            }.bind(this), [], this.options.cheatSheetDescription || 'Show / hide this help menu'));\n        }\n        if (this.options.cheatSheetCloseEsc) {\n            this.add(new Hotkey('esc', function (_) {\n                this.cheatSheetToggle.next(false);\n            }.bind(this), ['HOTKEYS-CHEATSHEET'], this.options.cheatSheetCloseEscDescription || 'Hide this help menu'));\n        }\n    }\n    add(hotkey, specificEvent) {\n        if (Array.isArray(hotkey)) {\n            const temp = [];\n            for (const key of hotkey) {\n                temp.push(this.add(key, specificEvent));\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.hotkeys.push(hotkey);\n        this.mousetrap.bind(hotkey.combo, (event, combo) => {\n            let shouldExecute = true;\n            // if the callback is executed directly `hotkey.get('w').callback()`\n            // there will be no event, so just execute the callback.\n            if (event) {\n                const target = (event.target || event.srcElement); // srcElement is IE only\n                const nodeName = target.nodeName.toUpperCase();\n                // check if the input has a mousetrap class, and skip checking preventIn if so\n                if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n                    shouldExecute = true;\n                }\n                else if (this.preventIn.indexOf(nodeName) > -1 &&\n                    hotkey.allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1) {\n                    // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n                    shouldExecute = false;\n                }\n            }\n            if (shouldExecute) {\n                return hotkey.callback.apply(this, [event, combo]);\n            }\n        }, specificEvent);\n        return hotkey;\n    }\n    remove(hotkey, specificEvent) {\n        const temp = [];\n        if (!hotkey) {\n            for (const key of this.hotkeys) {\n                temp.push(this.remove(key, specificEvent));\n            }\n            return temp;\n        }\n        if (Array.isArray(hotkey)) {\n            for (const key of hotkey) {\n                temp.push(this.remove(key));\n            }\n            return temp;\n        }\n        const index = this.findHotkey(hotkey);\n        if (index > -1) {\n            this.hotkeys.splice(index, 1);\n            this.mousetrap.unbind(hotkey.combo, specificEvent);\n            return hotkey;\n        }\n        return null;\n    }\n    get(combo) {\n        if (!combo) {\n            return this.hotkeys;\n        }\n        if (Array.isArray(combo)) {\n            const temp = [];\n            for (const key of combo) {\n                temp.push(this.get(key));\n            }\n            return temp;\n        }\n        for (const hotkey of this.hotkeys) {\n            if (hotkey.combo.indexOf(combo) > -1) {\n                return hotkey;\n            }\n        }\n        return null;\n    }\n    // noinspection JSUnusedGlobalSymbols\n    pause(hotkey) {\n        if (!hotkey) {\n            return this.pause(this.hotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp = [];\n            for (const key of hotkey) {\n                temp.push(this.pause(key));\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.pausedHotkeys.push(hotkey);\n        return hotkey;\n    }\n    // noinspection JSUnusedGlobalSymbols\n    unpause(hotkey) {\n        if (!hotkey) {\n            return this.unpause(this.pausedHotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp = [];\n            for (const key of hotkey) {\n                temp.push(this.unpause(key));\n            }\n            return temp;\n        }\n        const index = this.pausedHotkeys.indexOf(hotkey);\n        if (index > -1) {\n            this.add(hotkey);\n            return this.pausedHotkeys.splice(index, 1);\n        }\n        return null;\n    }\n    // noinspection JSUnusedGlobalSymbols\n    reset() {\n        this.mousetrap.reset();\n        this.hotkeys = [];\n        this.pausedHotkeys = [];\n        this.initCheatSheet();\n    }\n    findHotkey(hotkey) {\n        return this.hotkeys.indexOf(hotkey);\n    }\n}\nHotkeysService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysService, deps: [{ token: HotkeyOptions }], target: i0.ɵɵFactoryTarget.Injectable });\nHotkeysService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [HotkeyOptions]\n                    }] }];\n    } });\n\nclass HotkeysDirective {\n    constructor(hotkeysService, elementRef) {\n        this.hotkeysService = hotkeysService;\n        this.elementRef = elementRef;\n        this.hotkeysList = [];\n        this.oldHotkeys = [];\n        // Bind hotkeys to the current element (and any children)\n        this.mousetrap = new Mousetrap.default(this.elementRef.nativeElement);\n    }\n    ngOnInit() {\n        for (const hotkey of this.hotkeys) {\n            const combo = Object.keys(hotkey)[0];\n            const hotkeyObj = new Hotkey(combo, hotkey[combo]);\n            const oldHotkey = this.hotkeysService.get(combo);\n            if (oldHotkey !== null) { // We let the user overwrite callbacks temporarily if you specify it in HTML\n                this.oldHotkeys.push(oldHotkey);\n                this.hotkeysService.remove(oldHotkey);\n            }\n            this.hotkeysList.push(hotkeyObj);\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n        }\n    }\n    ngOnDestroy() {\n        for (const hotkey of this.hotkeysList) {\n            this.mousetrap.unbind(hotkey.combo);\n        }\n        this.hotkeysService.add(this.oldHotkeys);\n    }\n}\nHotkeysDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysDirective, deps: [{ token: HotkeysService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHotkeysDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.1\", type: HotkeysDirective, selector: \"[hotkeys]\", inputs: { hotkeys: \"hotkeys\" }, providers: [HotkeysService], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[hotkeys]',\n                    providers: [HotkeysService]\n                }]\n        }], ctorParameters: function () { return [{ type: HotkeysService }, { type: i0.ElementRef }]; }, propDecorators: { hotkeys: [{\n                type: Input\n            }] } });\n\nclass HotkeysCheatsheetComponent {\n    constructor(hotkeysService) {\n        this.hotkeysService = hotkeysService;\n        this.helpVisible = false;\n        this.title = 'Keyboard Shortcuts:';\n    }\n    ngOnInit() {\n        this.subscription = this.hotkeysService.cheatSheetToggle.subscribe((isOpen) => {\n            if (isOpen !== false) {\n                this.hotkeys = this.hotkeysService.hotkeys.filter(hotkey => hotkey.description);\n            }\n            if (isOpen === false) {\n                this.helpVisible = false;\n            }\n            else {\n                this.toggleCheatSheet();\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    toggleCheatSheet() {\n        this.helpVisible = !this.helpVisible;\n    }\n}\nHotkeysCheatsheetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysCheatsheetComponent, deps: [{ token: HotkeysService }], target: i0.ɵɵFactoryTarget.Component });\nHotkeysCheatsheetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.1\", type: HotkeysCheatsheetComponent, selector: \"hotkeys-cheatsheet\", inputs: { title: \"title\" }, ngImport: i0, template: \"<div class=\\\"cfp-hotkeys-container fade\\\" [ngClass]=\\\"{'in': helpVisible}\\\" style=\\\"display:none\\\">\\n    <div class=\\\"cfp-hotkeys\\\">\\n        <h4 class=\\\"cfp-hotkeys-title\\\">{{ title }}</h4>\\n        <table>\\n            <tbody>\\n            <tr *ngFor=\\\"let hotkey of hotkeys\\\">\\n                <td class=\\\"cfp-hotkeys-keys\\\">\\n                    <span *ngFor=\\\"let key of hotkey.formatted\\\" class=\\\"cfp-hotkeys-key\\\">{{ key }}</span>\\n                </td>\\n                <td class=\\\"cfp-hotkeys-text\\\">{{ hotkey.description }}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"cfp-hotkeys-close\\\" (click)=\\\"toggleCheatSheet()\\\">&#215;</div>\\n    </div>\\n</div>\\n\", styles: [\".cfp-hotkeys-container{display:table!important;position:fixed;width:100%;height:100%;top:0;left:0;color:#333;font-size:1em;background-color:#ffffffe6}.cfp-hotkeys-container.fade{z-index:-1024;visibility:hidden;opacity:0;transition:opacity .15s linear}.cfp-hotkeys-container.fade.in{z-index:10002;visibility:visible;opacity:1}.cfp-hotkeys-title{font-weight:700;text-align:center;font-size:1.2em}.cfp-hotkeys{width:100%;height:100%;display:table-cell;vertical-align:middle}.cfp-hotkeys table{margin:auto;color:#333}.cfp-content{display:table-cell;vertical-align:middle}.cfp-hotkeys-keys{padding:5px;text-align:right}.cfp-hotkeys-key{display:inline-block;color:#fff;background-color:#333;border:1px solid #333;border-radius:5px;text-align:center;margin-right:5px;box-shadow:inset 0 1px #666,0 1px #bbb;padding:5px 9px;font-size:1em}.cfp-hotkeys-text{padding-left:10px;font-size:1em}.cfp-hotkeys-close{position:fixed;top:20px;right:20px;font-size:2em;font-weight:700;padding:5px 10px;border:1px solid #ddd;border-radius:5px;min-height:45px;min-width:45px;text-align:center}.cfp-hotkeys-close:hover{background-color:#fff;cursor:pointer}@media all and (max-width: 500px){.cfp-hotkeys{font-size:.8em}}@media all and (min-width: 750px){.cfp-hotkeys{font-size:1.2em}}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeysCheatsheetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hotkeys-cheatsheet', template: \"<div class=\\\"cfp-hotkeys-container fade\\\" [ngClass]=\\\"{'in': helpVisible}\\\" style=\\\"display:none\\\">\\n    <div class=\\\"cfp-hotkeys\\\">\\n        <h4 class=\\\"cfp-hotkeys-title\\\">{{ title }}</h4>\\n        <table>\\n            <tbody>\\n            <tr *ngFor=\\\"let hotkey of hotkeys\\\">\\n                <td class=\\\"cfp-hotkeys-keys\\\">\\n                    <span *ngFor=\\\"let key of hotkey.formatted\\\" class=\\\"cfp-hotkeys-key\\\">{{ key }}</span>\\n                </td>\\n                <td class=\\\"cfp-hotkeys-text\\\">{{ hotkey.description }}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"cfp-hotkeys-close\\\" (click)=\\\"toggleCheatSheet()\\\">&#215;</div>\\n    </div>\\n</div>\\n\", styles: [\".cfp-hotkeys-container{display:table!important;position:fixed;width:100%;height:100%;top:0;left:0;color:#333;font-size:1em;background-color:#ffffffe6}.cfp-hotkeys-container.fade{z-index:-1024;visibility:hidden;opacity:0;transition:opacity .15s linear}.cfp-hotkeys-container.fade.in{z-index:10002;visibility:visible;opacity:1}.cfp-hotkeys-title{font-weight:700;text-align:center;font-size:1.2em}.cfp-hotkeys{width:100%;height:100%;display:table-cell;vertical-align:middle}.cfp-hotkeys table{margin:auto;color:#333}.cfp-content{display:table-cell;vertical-align:middle}.cfp-hotkeys-keys{padding:5px;text-align:right}.cfp-hotkeys-key{display:inline-block;color:#fff;background-color:#333;border:1px solid #333;border-radius:5px;text-align:center;margin-right:5px;box-shadow:inset 0 1px #666,0 1px #bbb;padding:5px 9px;font-size:1em}.cfp-hotkeys-text{padding-left:10px;font-size:1em}.cfp-hotkeys-close{position:fixed;top:20px;right:20px;font-size:2em;font-weight:700;padding:5px 10px;border:1px solid #ddd;border-radius:5px;min-height:45px;min-width:45px;text-align:center}.cfp-hotkeys-close:hover{background-color:#fff;cursor:pointer}@media all and (max-width: 500px){.cfp-hotkeys{font-size:.8em}}@media all and (min-width: 750px){.cfp-hotkeys{font-size:1.2em}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: HotkeysService }]; }, propDecorators: { title: [{\n                type: Input\n            }] } });\n\nclass HotkeyModule {\n    // noinspection JSUnusedGlobalSymbols\n    static forRoot(options = {}) {\n        return {\n            ngModule: HotkeyModule,\n            providers: [\n                HotkeysService,\n                { provide: HotkeyOptions, useValue: options }\n            ]\n        };\n    }\n}\nHotkeyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHotkeyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeyModule, declarations: [HotkeysDirective, HotkeysCheatsheetComponent], imports: [CommonModule], exports: [HotkeysDirective, HotkeysCheatsheetComponent] });\nHotkeyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeyModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HotkeyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [HotkeysDirective, HotkeysCheatsheetComponent],\n                    imports: [CommonModule],\n                    exports: [HotkeysDirective, HotkeysCheatsheetComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of angular2-hotkeys\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Hotkey, HotkeyModule, HotkeyOptions, HotkeysCheatsheetComponent, HotkeysDirective, HotkeysService };\n"]},"metadata":{},"sourceType":"module"}