{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"src/app/services/posts.service\";\nexport class EditPostComponent {\n  constructor(formBuilder, // Build private form\n  http, // Build private HTTP client\n  router, // Build private router\n  toast, // Add toast service\n  postService) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.toast = toast;\n    this.postService = postService;\n  }\n\n  ngOnInit() {\n    this.postForm = this.formBuilder.group({\n      postTitle: ['', Validators.required],\n      postBody: ['', Validators.required]\n    });\n  }\n\n  edit() {\n    console.log({\n      Title: this.postForm.value.postTitle,\n      Body: this.postForm.value.postBody\n    }); // this.postService.createPost({\n    //   Title: this.postForm.value.postTitle,\n    //   Body: this.postForm.value.postBody,\n    // })\n    // .subscribe(async (res) => {\n    //   console.log(res)\n    //   if (res.appUser) {\n    //     this.postForm.reset();\n    //     this.reloadComponent();\n    //     this.toast.success({\n    //       detail: \"Success!\",\n    //       summary: \"Post was successful!\",\n    //       duration: 5000\n    //     })\n    //   } else {\n    //     this.reloadComponent();\n    //     this.toast.warning({\n    //       detail: \"Error\",\n    //       summary: \"Post failed :/\",\n    //       duration: 5000\n    //     })\n    //   }\n    // })\n  }\n\n  reloadComponent() {\n    let currentUrl = this.router.url;\n\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate([currentUrl]);\n  }\n\n  handleKeyEnter(event) {\n    event.preventDefault();\n  }\n\n}\n\nEditPostComponent.ɵfac = function EditPostComponent_Factory(t) {\n  return new (t || EditPostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.PostsService));\n};\n\nEditPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditPostComponent,\n  selectors: [[\"app-edit-post\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-post works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LXBvc3QuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["/Users/baeonette/Software Development/Final-Project/broadcast/broadcast-frontend/src/app/components/edit-post/edit-post.component.ts"],"names":["Validators","i0","i1","i2","i3","i4","i5","EditPostComponent","constructor","formBuilder","http","router","toast","postService","ngOnInit","postForm","group","postTitle","required","postBody","edit","console","log","Title","value","Body","reloadComponent","currentUrl","url","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","navigate","handleKeyEnter","event","preventDefault","ɵfac","EditPostComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","HttpClient","Router","NgToastService","PostsService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","EditPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"src/app/services/posts.service\";\nexport class EditPostComponent {\n    constructor(formBuilder, // Build private form\n    http, // Build private HTTP client\n    router, // Build private router\n    toast, // Add toast service\n    postService) {\n        this.formBuilder = formBuilder;\n        this.http = http;\n        this.router = router;\n        this.toast = toast;\n        this.postService = postService;\n    }\n    ngOnInit() {\n        this.postForm = this.formBuilder.group({\n            postTitle: ['', Validators.required],\n            postBody: ['', Validators.required],\n        });\n    }\n    edit() {\n        console.log({\n            Title: this.postForm.value.postTitle,\n            Body: this.postForm.value.postBody,\n        });\n        // this.postService.createPost({\n        //   Title: this.postForm.value.postTitle,\n        //   Body: this.postForm.value.postBody,\n        // })\n        // .subscribe(async (res) => {\n        //   console.log(res)\n        //   if (res.appUser) {\n        //     this.postForm.reset();\n        //     this.reloadComponent();\n        //     this.toast.success({\n        //       detail: \"Success!\",\n        //       summary: \"Post was successful!\",\n        //       duration: 5000\n        //     })\n        //   } else {\n        //     this.reloadComponent();\n        //     this.toast.warning({\n        //       detail: \"Error\",\n        //       summary: \"Post failed :/\",\n        //       duration: 5000\n        //     })\n        //   }\n        // })\n    }\n    ;\n    reloadComponent() {\n        let currentUrl = this.router.url;\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n        this.router.onSameUrlNavigation = 'reload';\n        this.router.navigate([currentUrl]);\n    }\n    ;\n    handleKeyEnter(event) {\n        event.preventDefault();\n    }\n}\nEditPostComponent.ɵfac = function EditPostComponent_Factory(t) { return new (t || EditPostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.PostsService)); };\nEditPostComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditPostComponent, selectors: [[\"app-edit-post\"]], decls: 2, vars: 0, template: function EditPostComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"edit-post works!\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LXBvc3QuY29tcG9uZW50LmNzcyJ9 */\"] });\n"]},"metadata":{},"sourceType":"module"}